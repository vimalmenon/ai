name: Quality Check

on:
  push:
  workflow_dispatch:

jobs:
  quality-check:
    name: Quality Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
  versions:
    uses: vimalmenon/git-action-anywhere/.github/workflows/next-version.yml@main
    with:
      release_type: ${{ github.event.inputs.Release || 'Patch' }}
      
      # - name: Install Poetry
      #   uses: snok/install-poetry@v1
      #   with:
      #     virtualenvs-create: true
      #     virtualenvs-in-project: true
      #     virtualenvs-path: .venv
      #     installer-parallel: true
      # - name: Install dependencies
      #   run: poetry install --no-interaction --no-root
      # - name: Run Tox
      #   run: poetry run tox -r
      # - name: SonarQube Scan
      #   uses: SonarSource/sonarqube-scan-action@v5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  echo-release:
    runs-on: ubuntu-latest
    needs: versions
    steps:
      - run: echo "Release created with tag v${{ needs.versions.outputs.selected  }}"
